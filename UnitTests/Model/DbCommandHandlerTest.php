<?php

include_once(dirname(__FILE__) . '/../../Services/Autoloader.php');
require_once dirname(__FILE__) . '/../../../../../c_libraries/lw/lw_object.class.php';
require_once dirname(__FILE__) . '/../../../../../c_libraries/lw/lw_db.class.php';
require_once dirname(__FILE__) . '/../../../../../c_libraries/lw/lw_db_mysqli.class.php';
require_once dirname(__FILE__) . '/../../../../../c_libraries/lw/lw_registry.class.php';
require_once dirname(__FILE__) . '/../Config/phpUnitConfig.php';

/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.0 on 2013-04-23 at 14:24:49.
 */
class DbCommandHandlerTest extends \PHPUnit_Framework_TestCase
{

    /**
     * @var DbCommandHandler
     */
    protected $commandHandler;
    protected $db;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $autoloader = new \LwDirectoryObserver\Services\Autoloader();

        $phpUnitConfig = new phpUnitConfig();
        $config = $phpUnitConfig->getConfig();

        $db = new lw_db_mysqli($config["lwdb"]["user"], $config["lwdb"]["pass"], $config["lwdb"]["host"], $config["lwdb"]["db"]);
        $db->connect();
        $this->db = $db;

        $this->commandHandler = new \LwDirectoryObserver\Model\DbCommandHandler($this->db, "/ich/bin/der/structurelog/path/");
        $this->commandHandler->setObservePath("/ich/bin/der/observe/path/");

        $this->db->setStatement("CREATE TABLE IF NOT EXISTS lw_directory_observer (
                                                  id int(11) NOT NULL AUTO_INCREMENT,
                                                  date int(8) NOT NULL,
                                                  observed_directory varchar(255) COLLATE utf8_unicode_ci NOT NULL,
                                                  name varchar(255) COLLATE utf8_unicode_ci NOT NULL,
                                                  type varchar(255) COLLATE utf8_unicode_ci NOT NULL,
                                                  operation varchar(2555) COLLATE utf8_unicode_ci NOT NULL,
                                                  size varchar(255) COLLATE utf8_unicode_ci NOT NULL,
                                                  new_size varchar(255) COLLATE utf8_unicode_ci NOT NULL,
                                                  last_change_date bigint(14) NOT NULL,
                                                  PRIMARY KEY (id)
                                                ) ENGINE=InnoDB  DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci AUTO_INCREMENT=1;");
        $this->db->pdbquery();
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
        $this->db->setStatement("DROP TABLE t:lw_directory_observer ");
        $this->db->pdbquery();
    }


    /**
     * @covers LwDirectoryObserver\Model\DbCommandHandler::addChanges
     * @todo   Implement testAddChanges().
     */
    public function testAddChanges()
    {
        $array = array("files" => array(
            "lovelywallpaper8_1.jpg" => array("deleted" => 1),
            "BenutzerhandbuchVorlage.odt" => array("added" => array("size" => "2.2 MB", "date" => 20130423145741)),
            "template.html" => array("added" => array("size" => "5.36 KB", "date" => 20130423145741))
            ));
        
        $this->commandHandler->addChanges($array);
        
        $this->db->setStatement("SELECT * FROM t:lw_directory_observer WHERE id <= 4");
        $result = $this->db->pselect1();
        print_r($result);diE();
    }

    /**
     * @covers LwDirectoryObserver\Model\DbCommandHandler::saveCompleteSize
     * @todo   Implement testSaveCompleteSize().
     */
    public function testSaveCompleteSize()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }
}
